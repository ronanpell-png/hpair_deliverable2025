{"ast":null,"code":"// Authentication service using Firebase Auth\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../firebase/config';\n\n// Register a new user\nexport const registerUser = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return {\n      success: true,\n      user: userCredential.user,\n      message: 'Registration successful!'\n    };\n  } catch (error) {\n    console.error('Registration error:', error);\n    return {\n      success: false,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign in existing user\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return {\n      success: true,\n      user: userCredential.user,\n      message: 'Login successful!'\n    };\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      success: false,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign out user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    return {\n      success: true,\n      message: 'Logged out successfully!'\n    };\n  } catch (error) {\n    console.error('Logout error:', error);\n    return {\n      success: false,\n      message: 'Failed to logout'\n    };\n  }\n};\n\n// Listen to auth state changes\nexport const onAuthStateChange = callback => {\n  return onAuthStateChanged(auth, callback);\n};\n\n// Get current user\nexport const getCurrentUser = () => {\n  return auth.currentUser;\n};\n\n// Helper function to get user-friendly error messages\nconst getErrorMessage = errorCode => {\n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'This email is already registered. Please try logging in instead.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email. Please register first.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    default:\n      return 'An error occurred. Please try again.';\n  }\n};\nexport default {\n  registerUser,\n  signInUser,\n  signOutUser,\n  onAuthStateChange,\n  getCurrentUser\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","auth","registerUser","email","password","userCredential","success","user","message","error","console","getErrorMessage","code","signInUser","signOutUser","onAuthStateChange","callback","getCurrentUser","currentUser","errorCode"],"sources":["/Users/ronanpell/hpair_deliverable2025/src/services/authService.js"],"sourcesContent":["// Authentication service using Firebase Auth\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged \n} from 'firebase/auth';\nimport { auth } from '../firebase/config';\n\n// Register a new user\nexport const registerUser = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return { \n      success: true, \n      user: userCredential.user,\n      message: 'Registration successful!' \n    };\n  } catch (error) {\n    console.error('Registration error:', error);\n    return { \n      success: false, \n      message: getErrorMessage(error.code) \n    };\n  }\n};\n\n// Sign in existing user\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return { \n      success: true, \n      user: userCredential.user,\n      message: 'Login successful!' \n    };\n  } catch (error) {\n    console.error('Login error:', error);\n    return { \n      success: false, \n      message: getErrorMessage(error.code) \n    };\n  }\n};\n\n// Sign out user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    return { success: true, message: 'Logged out successfully!' };\n  } catch (error) {\n    console.error('Logout error:', error);\n    return { success: false, message: 'Failed to logout' };\n  }\n};\n\n// Listen to auth state changes\nexport const onAuthStateChange = (callback) => {\n  return onAuthStateChanged(auth, callback);\n};\n\n// Get current user\nexport const getCurrentUser = () => {\n  return auth.currentUser;\n};\n\n// Helper function to get user-friendly error messages\nconst getErrorMessage = (errorCode) => {\n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'This email is already registered. Please try logging in instead.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email. Please register first.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    default:\n      return 'An error occurred. Please try again.';\n  }\n};\n\nexport default {\n  registerUser,\n  signInUser,\n  signOutUser,\n  onAuthStateChange,\n  getCurrentUser\n};\n"],"mappings":"AAAA;AACA,SACEA,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,QACb,eAAe;AACtB,SAASC,IAAI,QAAQ,oBAAoB;;AAEzC;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrD,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMR,8BAA8B,CAACI,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAClF,OAAO;MACLE,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEF,cAAc,CAACE,IAAI;MACzBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO;MACLH,OAAO,EAAE,KAAK;MACdE,OAAO,EAAEG,eAAe,CAACF,KAAK,CAACG,IAAI;IACrC,CAAC;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOV,KAAK,EAAEC,QAAQ,KAAK;EACnD,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMP,0BAA0B,CAACG,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAC9E,OAAO;MACLE,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEF,cAAc,CAACE,IAAI;MACzBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO;MACLH,OAAO,EAAE,KAAK;MACdE,OAAO,EAAEG,eAAe,CAACF,KAAK,CAACG,IAAI;IACrC,CAAC;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMf,OAAO,CAACE,IAAI,CAAC;IACnB,OAAO;MAAEK,OAAO,EAAE,IAAI;MAAEE,OAAO,EAAE;IAA2B,CAAC;EAC/D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO;MAAEH,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAmB,CAAC;EACxD;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,iBAAiB,GAAIC,QAAQ,IAAK;EAC7C,OAAOhB,kBAAkB,CAACC,IAAI,EAAEe,QAAQ,CAAC;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOhB,IAAI,CAACiB,WAAW;AACzB,CAAC;;AAED;AACA,MAAMP,eAAe,GAAIQ,SAAS,IAAK;EACrC,QAAQA,SAAS;IACf,KAAK,2BAA2B;MAC9B,OAAO,kEAAkE;IAC3E,KAAK,oBAAoB;MACvB,OAAO,2CAA2C;IACpD,KAAK,oBAAoB;MACvB,OAAO,qCAAqC;IAC9C,KAAK,qBAAqB;MACxB,OAAO,0DAA0D;IACnE,KAAK,qBAAqB;MACxB,OAAO,uCAAuC;IAChD,KAAK,wBAAwB;MAC3B,OAAO,mDAAmD;IAC5D;MACE,OAAO,sCAAsC;EACjD;AACF,CAAC;AAED,eAAe;EACbjB,YAAY;EACZW,UAAU;EACVC,WAAW;EACXC,iBAAiB;EACjBE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}