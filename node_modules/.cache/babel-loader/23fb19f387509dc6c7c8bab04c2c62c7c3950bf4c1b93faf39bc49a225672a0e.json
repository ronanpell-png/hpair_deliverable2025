{"ast":null,"code":"// Firebase service for form submissions\nimport { collection, addDoc, getDocs, query, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nconst COLLECTION_NAME = 'formSubmissions';\n\n// Submit form data to Firebase\nexport const submitForm = async formData => {\n  try {\n    const docRef = await addDoc(collection(db, COLLECTION_NAME), {\n      ...formData,\n      submittedAt: new Date(),\n      timestamp: Date.now()\n    });\n    console.log('Form submitted successfully with ID:', docRef.id);\n    return {\n      success: true,\n      id: docRef.id,\n      message: 'Form submitted successfully!'\n    };\n  } catch (error) {\n    console.error('Error submitting form:', error);\n    return {\n      success: false,\n      message: 'Failed to submit form. Please try again.'\n    };\n  }\n};\n\n// Get all form submissions (for admin viewing)\nexport const getFormSubmissions = async (limitCount = 50) => {\n  try {\n    const q = query(collection(db, COLLECTION_NAME), orderBy('submittedAt', 'desc'), limit(limitCount));\n    const querySnapshot = await getDocs(q);\n    const submissions = [];\n    querySnapshot.forEach(doc => {\n      submissions.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return {\n      success: true,\n      data: submissions\n    };\n  } catch (error) {\n    console.error('Error fetching submissions:', error);\n    return {\n      success: false,\n      message: 'Failed to fetch submissions'\n    };\n  }\n};\n\n// Get form submission count\nexport const getSubmissionCount = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, COLLECTION_NAME));\n    return {\n      success: true,\n      count: querySnapshot.size\n    };\n  } catch (error) {\n    console.error('Error getting submission count:', error);\n    return {\n      success: false,\n      message: 'Failed to get submission count'\n    };\n  }\n};\nconst firebaseService = {\n  submitForm,\n  getFormSubmissions,\n  getSubmissionCount\n};\nexport default firebaseService;","map":{"version":3,"names":["collection","addDoc","getDocs","query","orderBy","limit","db","COLLECTION_NAME","submitForm","formData","docRef","submittedAt","Date","timestamp","now","console","log","id","success","message","error","getFormSubmissions","limitCount","q","querySnapshot","submissions","forEach","doc","push","data","getSubmissionCount","count","size","firebaseService"],"sources":["/Users/ronanpell/hpair_deliverable2025/src/services/firebaseService.js"],"sourcesContent":["// Firebase service for form submissions\nimport { collection, addDoc, getDocs, query, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../firebase/config';\n\nconst COLLECTION_NAME = 'formSubmissions';\n\n// Submit form data to Firebase\nexport const submitForm = async (formData) => {\n  try {\n    const docRef = await addDoc(collection(db, COLLECTION_NAME), {\n      ...formData,\n      submittedAt: new Date(),\n      timestamp: Date.now()\n    });\n    \n    console.log('Form submitted successfully with ID:', docRef.id);\n    return { \n      success: true, \n      id: docRef.id,\n      message: 'Form submitted successfully!' \n    };\n  } catch (error) {\n    console.error('Error submitting form:', error);\n    return { \n      success: false, \n      message: 'Failed to submit form. Please try again.' \n    };\n  }\n};\n\n// Get all form submissions (for admin viewing)\nexport const getFormSubmissions = async (limitCount = 50) => {\n  try {\n    const q = query(\n      collection(db, COLLECTION_NAME), \n      orderBy('submittedAt', 'desc'), \n      limit(limitCount)\n    );\n    \n    const querySnapshot = await getDocs(q);\n    const submissions = [];\n    \n    querySnapshot.forEach((doc) => {\n      submissions.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    \n    return { \n      success: true, \n      data: submissions \n    };\n  } catch (error) {\n    console.error('Error fetching submissions:', error);\n    return { \n      success: false, \n      message: 'Failed to fetch submissions' \n    };\n  }\n};\n\n// Get form submission count\nexport const getSubmissionCount = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, COLLECTION_NAME));\n    return { \n      success: true, \n      count: querySnapshot.size \n    };\n  } catch (error) {\n    console.error('Error getting submission count:', error);\n    return { \n      success: false, \n      message: 'Failed to get submission count' \n    };\n  }\n};\n\nconst firebaseService = {\n  submitForm,\n  getFormSubmissions,\n  getSubmissionCount\n};\n\nexport default firebaseService;\n"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,QAAQ,oBAAoB;AACvF,SAASC,EAAE,QAAQ,oBAAoB;AAEvC,MAAMC,eAAe,GAAG,iBAAiB;;AAEzC;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMT,MAAM,CAACD,UAAU,CAACM,EAAE,EAAEC,eAAe,CAAC,EAAE;MAC3D,GAAGE,QAAQ;MACXE,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC;MACvBC,SAAS,EAAED,IAAI,CAACE,GAAG,CAAC;IACtB,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEN,MAAM,CAACO,EAAE,CAAC;IAC9D,OAAO;MACLC,OAAO,EAAE,IAAI;MACbD,EAAE,EAAEP,MAAM,CAACO,EAAE;MACbE,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO;MACLF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAG,MAAAA,CAAOC,UAAU,GAAG,EAAE,KAAK;EAC3D,IAAI;IACF,MAAMC,CAAC,GAAGpB,KAAK,CACbH,UAAU,CAACM,EAAE,EAAEC,eAAe,CAAC,EAC/BH,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,EAC9BC,KAAK,CAACiB,UAAU,CAClB,CAAC;IAED,MAAME,aAAa,GAAG,MAAMtB,OAAO,CAACqB,CAAC,CAAC;IACtC,MAAME,WAAW,GAAG,EAAE;IAEtBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;MAC7BF,WAAW,CAACG,IAAI,CAAC;QACfX,EAAE,EAAEU,GAAG,CAACV,EAAE;QACV,GAAGU,GAAG,CAACE,IAAI,CAAC;MACd,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLX,OAAO,EAAE,IAAI;MACbW,IAAI,EAAEJ;IACR,CAAC;EACH,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO;MACLF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF,MAAMN,aAAa,GAAG,MAAMtB,OAAO,CAACF,UAAU,CAACM,EAAE,EAAEC,eAAe,CAAC,CAAC;IACpE,OAAO;MACLW,OAAO,EAAE,IAAI;MACba,KAAK,EAAEP,aAAa,CAACQ;IACvB,CAAC;EACH,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO;MACLF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC;AAED,MAAMc,eAAe,GAAG;EACtBzB,UAAU;EACVa,kBAAkB;EAClBS;AACF,CAAC;AAED,eAAeG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}